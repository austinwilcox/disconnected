# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno then run `deno lint` and `deno test`.
# For more information see: https://github.com/denoland/setup-deno

name: Build and Release

on:
  push:
    branches: ["master"]

jobs:
  buildAndRun:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Setup repo
        uses: actions/checkout@v3

      - name: Setup Deno
        # uses: denoland/setup-deno@v1
        uses: denoland/setup-deno@61fe2df320078202e33d7d5ad347e7dcfa0e8f31  # v1.1.2
        with:
          deno-version: v1.36.4

      - name: Tests
        run: deno test
      
      - name: Build Deno App
        run: deno compile --allow-read --allow-env --allow-write --allow-run --output ./dist/disconnected index.ts
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: v0.3.0 # Replace with your desired tag name
          release_name: Release 0.3.0 # Replace with your desired release name
          body: |
            Fix Deno.run to Deno.Command as Deno.run is being deprecated. I have resolved the issue where you supply the global basePath as ~/ and the window basePath as ~/ by adding a new key in the json structure called concatenateBasePathToGlobalBasePath. This will prevent issues such as cd ~/~/ being run in the window. 

            Window basePaths can now use relative paths.

            When you attach to the session the -c command is attached which will instantiate all new windows to the global basePath directory you specify in the config file.
          draft: false
          prerelease: false
          
      - name: Upload Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/disconnected
          asset_name: disconnected
          asset_content_type: application/octet-stream
